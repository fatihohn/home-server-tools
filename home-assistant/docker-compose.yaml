services:
  homeassistant:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: homeassistant
    env_file:
      - .env
    ports:
      - 8123:8123
    volumes:
      - ./config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
      - ./libhueble/src:/usr/src/app/src
      - ./libhueble/scripts:/usr/src/app/scripts
      - /var/run/docker.sock:/var/run/docker.sock 
    restart: unless-stopped
    privileged: true
    network_mode: host
  hueble:
    build:
      context: ./libhueble
      dockerfile: Dockerfile
    container_name: hueble
    env_file:
      - .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
      - ./libhueble/src:/usr/src/app/src
      - ./libhueble/scripts:/usr/src/app/scripts
    restart: unless-stopped
    privileged: true
    network_mode: host

  motion_recorder:
    build:
      context: ./motion_recorder
      dockerfile: Dockerfile
    container_name: motion_recorder
    env_file:
      - .env
    volumes:
      - /home/nas/nvme/share/nas/tmp/motion_recorder/recordings:/recordings
    restart: unless-stopped

#   diyHue:
#     image: diyhue/core:latest
#     # This makes for more convienient naming, but only allows one instance of the image
#     container_name: diyHue
#     restart: unless-stopped

#     # environment:
#     #   # Uncomment to enable debug mode
#     #   # DEBUG: true
#     #   # IP and MAC are only needed for running diyHue in the bridge network
#     #   IP: 192.168.45.33
#     #   MAC: C6:E8:AA:61:9D:0A
#     volumes:
#       - ./diyhue/export:/opt/hue-emulator/export
#       - ./diyhue/config:/opt/hue-emulator/config
#       - /run/dbus:/run/dbus:ro
#     privileged: true
#     ports:
#       - '8030:80'
#       - '443:443'
#       - '1900:1900/udp'
#       - '2100:2100/udp'
#       - '1982:1982/udp'
#     # # Alternatively, you can activate host mode by uncommenting the line below and removing all ports and the env vars above
#     # network_mode: host
